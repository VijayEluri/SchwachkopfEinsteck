<?xml version="1.0"?>
<!-- ant build file for SchwachkopfEinsteck -->

<project name="SchwachkopfEinsteck" default="dist" basedir=".">

	<property name="fred.jar.location" location="../fred/lib/FreenetService.jar"/>
	<property name="framework.jar.location" location="../concierge/framework/dist/fconcierge.jar"/>
	<property name="servletapi.jar.location" location="../servlet-api-2.5/dist/servlet-api-2.5.jar"/>
	<property name="jgit.jar.location" location="../jgit/dist/jgit.jar"/>

	<property name="svn.revision" value="@custom@"/>
	<property name="source-version" value="1.5"/>
	<property name="target-version" value="1.5"/>
	<property name="build" location="build/"/>
	<property name="build-test" location="build-test/"/>
	<property name="dist" location="dist/"/>
	<property name="src" location="src/"/>
	<property name="junit.location" value="/usr/share/java/junit.jar"/>
	<property name="version.src" value="plugins/schwachkopfeinsteck/Version.java" />
	<property name="version.build" value="plugins/schwachkopfeinsteck/Version.class" />

	<available file="src/plugins/schwachkopfeinsteck/Version.java" property="version.present"/>
	<available file="${junit.location}" property="junit.present"/>

	<exec executable="git"
		failifexecutionfails="false"
		errorProperty="git.errror"
		outputproperty="git.describe"
		resultproperty="git.result">
		<arg value="describe" />
		<arg value="--always" />
		<arg value="--abbrev=4" />
	</exec>

	<condition property="git.revision" value="${git.describe}" else="@unknown@">
		<and>
			<equals arg1="${git.result}" arg2="0" />
			<isset property="git.describe" />
		</and>
	</condition>

	<target name="mkdir">
		<mkdir dir="${build}"/>
		<mkdir dir="${build-test}"/>
		<mkdir dir="${dist}"/>
	</target>

	<!-- ================================================== -->
	<target name="compile" depends="mkdir" >
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->

		<!-- Create the Version file with patched revision number in ${build} -->
		<copy file="${src}/${version.src}" tofile="${build}/${version.src}" overwrite="true" />
		<delete file="${build}/${version.build}" quiet="true" />
		<replace file="${build}/${version.src}">
			<replacefilter token="@custom@" value="${git.revision}"/>
		</replace>
		<echo message="Updated build version to ${git.revision} in ${build}/${version.src}"/>

		<!-- Force compile of Version.java in case compile of ${src} didn't trigger it -->
		<javac srcdir="${build}" destdir="${build}" debug="on" optimize="on" source="${source-version}" target="${target-version}">
			<include name="${version.src}"/>
		</javac>

		<!-- FIXME: remove the debug and replace with optimize -->
		<javac srcdir="${src}" destdir="${build}" debug="on" optimize="on" source="${source-version}" target="${target-version}">
			<classpath>
				<pathelement location="${fred.jar.location}"/>
				<pathelement location="${servletapi.jar.location}"/>
				<pathelement location="${jgit.jar.location}"/>
				<pathelement location="${framework.jar.location}"/>
			</classpath>
			<include name="**/*.java"/>
			<exclude name="**/*Test.java"/>
			<exclude name="${version.src}"/>
		</javac>
	</target>

	<!-- ================================================== -->

	<target name="unit-build" depends="compile" if="junit.present" unless="skip_tests">
		<javac srcdir="src/" destdir="${build-test}" debug="on" optimize="on" source="1.5">
			<classpath>
				<pathelement path="${build}"/>
				<pathelement location="${freenet-ext.location}"/>
				<pathelement location="${freenet-cvs-snapshot.location}"/>
				<pathelement location="${junit.location}"/>
			</classpath>
			<compilerarg value="-Xlint"/>
			<include name="**/*Test.java"/>
		</javac>
	</target>

	<target name="junit" depends="unit-build" if="junit.present" unless="skip_tests">
		<junit printsummary="yes" fork="yes" haltonfailure="yes">
			<classpath>
				<pathelement path="${build}"/>
				<pathelement path="${build-test}"/>
				<pathelement location="${freenet-ext.location}"/>
				<pathelement location="${freenet-cvs-snapshot.location}"/>
				<pathelement location="${junit.location}"/>
			</classpath>

			<formatter type="plain" usefile="false"/>

			<batchtest fork="yes">
				<fileset dir="${build-test}">
					<include name="**/*Test.class"/>
				</fileset>
			</batchtest>
			<sysproperty key="benchmark" value="${benchmark}" />
			<sysproperty key="extensiveTesting" value="${extensiveTesting}" />
		</junit>
	</target>

	<!-- ================================================== -->
	<target name="dist" depends="compile"
		description="generate the distribution" >
		<jar jarfile="${dist}/SchwachkopfEinsteck.jar" duplicate="fail">
			<manifest>
				<!-- attribute name="Plugin-Main-Class" value="plugins.schwachkopfeinsteck.GitPlugin"/ -->
				<!-- attribute name="Bundle-ManifestVersion" value="2" / -->
				<attribute name="Bundle-Activator" value="ske.Activator" />
				<attribute name="Bundle-Name" value="SchwachkopfEinsteck" />
				<attribute name="Bundle-SymbolicName" value="org.foo.example.Example" />
				<attribute name="Bundle-Version" value="0.0.1" />
				<attribute name="Import-Package" value="org.osgi.framework;version=1.3.0,
javax.servlet,
javax.servlet.http,
org.eclipse.jgit.errors,
org.eclipse.jgit.lib,
org.eclipse.jgit.revwalk,
org.eclipse.jgit.storage.file,
org.eclipse.jgit.transport,
org.eclipse.jgit.http.server,
org.eclipse.jgit.http.server.resolver,
org.eclipse.jgit.util,
org.osgi.service.http,
freenet.osgi.compress,
freenet.node,
freenet.keys,
freenet.client,
freenet.client.async,
freenet.client.events,
freenet.support,
freenet.support.api,
freenet.support.io"/>
				<!-- attribute name="Export-Package" value="hyperocha.api" / -->
			</manifest>
			<!-- fileset dir="src/" casesensitive="no">
				<include name="*.txt"/>
			</fileset -->
			<fileset dir="${build}/"/>
		</jar>
	</target>

	<!-- ================================================== -->
	<target name="clean" description="Delete class files and docs dir.">
		<delete dir="${build}"/>
		<delete dir="${build-test}"/>
		<delete dir="${dist}"/>
	</target>
</project>
